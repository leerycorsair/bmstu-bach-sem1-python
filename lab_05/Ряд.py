#Программа для вывода суммы ряда с заданной точностью
#Выполнил Леонов Владислав
#ИУ7-16Б
print('Вас приветствует программа для нахождения суммы ряда с заданной точностью')
print()
x=float(input('Введите основание ряда(0;2]: '))
#Проверка правильности введенных данных
if x>2 or x<=0:
    print('Введенное вами основание не принадлежит заданному полуинтервалу')
#Ввод данных
else:
    z=True
    eps=float(input('Введите необходимую точность для суммы ряда: '))
    max_it=int(input('Введите максимальное число итераций: '))
    step=int(input('Введите шаг для отображения элементов последовательности: '))

#Проверка правильности введенных данных
    if eps <= 0:
        print('Вы ввели точность меньше либо равную 0')
        z=False
    if max_it<0:
        print('Вы ввели максимальное число итераций меньше 0')
        z=False
    if step<=0:
        print('Ошибка: шаг должен быть больше 0')
        z=False
    if max_it==0:
        print('Сумма ряда за 0 итераций: 0')
        z=False
#Вывод таблицы чисел ряда    
    if z:
        s = curr = 1.0
        n=2
        num=1
        it=0
        nxt=-n*(n+1) * x / (n-1)/2
        print('┌'+'─'*15+'┬'+'─'*28+'┬'+'─'*28+'┐')
        print('│'+' '*7+'№'+' '*7+'│'+' '*12+'Cur'+' '*13+'│'+' '*12+'Sum'+' '*13+'│')
        print('├' + '─' * 15 + '┼' + '─' * 28 + '┼' + '─' * 28 + '┤')
        print('│','{:^15}'.format(num),'│ {:^26.10} │ {:^26.10} │'.format(curr,s),sep='')
        while abs(nxt)>eps and it+1<max_it:
            it+=1
            n+=1
            curr=nxt
            nxt=-nxt*(n+1)*x/(n-1)
            s+=curr
            num += 1
            if (num-1)%step==0:
                print(('├' + '─' * 15 + '┼' + '─' * 28 + '┼' + '─' * 28 + '┤'))
                print('│','{:^15}'.format(num),'│ {:^26.10} │ {:^26.10} │'.format(curr,s),sep='')
        if (num-1)%step!=0 and it!=0 and it!=1:
            print(('├' + '─' * 15 + '┼' + '─' * 28 + '┼' + '─' * 28 + '┤'))
            print('│', '{:^15}'.format(num), '│ {:^26.10} │ {:^26.10} │'.format(curr, s), sep='')
        print(('└' + '─' * 15 + '┴' + '─' * 28 + '┴' + '─' * 28 + '┘'))
#Вывод итогового ответа
        if it+1==max_it and abs(nxt)>eps:
            print ('Ряд не сходится за число итераций, равное ', it+1)
        else:
            print('Ряд сходится за число итераций равное ', it+1)
            print('Сумма с относительно низкой точностью = ', '{:<10.6}'.format(s),sep='')
            print('Сумма с относительно высокой точностью = ', '{:<30.25}'.format(s),sep='')
